#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä–æ–≥–æ Yandex TTS —Å gRPC streaming
"""

import asyncio
import sys
import os
import time
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv('/root/Asterisk_bot/asterisk-vox-bot/.env')

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/root/Asterisk_bot/asterisk-vox-bot')

from app.backend.services.yandex_tts_service import get_yandex_tts_service

async def test_grpc_tts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å gRPC TTS vs HTTP TTS"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –°–í–ï–†–•–ë–´–°–¢–†–´–ô Yandex TTS —Å gRPC streaming...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    oauth_token = os.getenv("OAUTH_TOKEN")
    folder_id = os.getenv("YANDEX_FOLDER_ID")
    
    print(f"üìã OAUTH_TOKEN: {'‚úÖ –Ω–∞–π–¥–µ–Ω' if oauth_token else '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω'}")
    print(f"üìã YANDEX_FOLDER_ID: {'‚úÖ –Ω–∞–π–¥–µ–Ω' if folder_id else '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω'}")
    
    if not oauth_token or not folder_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
    tts_service = get_yandex_tts_service()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã
    test_phrases = [
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç —Å–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä–æ–≥–æ Yandex TTS.",
        "–°–µ–π—á–∞—Å –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ —á–µ—Ä–µ–∑ gRPC.",
        "–û–∂–∏–¥–∞–µ–º–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 1-1.5 —Å–µ–∫—É–Ω–¥—ã!"
    ]
    
    for i, phrase in enumerate(test_phrases):
        print(f"\nüìù –¢–µ—Å—Ç {i+1}: '{phrase}'")
        
        # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è
        start_time = time.time()
        
        try:
            # –í—ã–∑—ã–≤–∞–µ–º TTS
            result = await tts_service.text_to_speech(phrase, f"grpc_test_{i+1}")
            
            end_time = time.time()
            duration = end_time - start_time
            
            if result:
                print(f"‚úÖ TTS –≥–æ—Ç–æ–≤ –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥")
                print(f"üìÅ –§–∞–π–ª: {result}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                full_path = f"/usr/share/asterisk/sounds/ru/{result}.wav"
                if os.path.exists(full_path):
                    file_size = os.path.getsize(full_path)
                    print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
                else:
                    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {full_path}")
            else:
                print(f"‚ùå TTS –Ω–µ—É–¥–∞—á–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥")
                
        except Exception as e:
            end_time = time.time()
            duration = end_time - start_time
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_grpc_tts())
