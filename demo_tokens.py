#!/usr/bin/env python3
"""
–ù–ê–ì–õ–Ø–î–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–∫–µ–Ω—ã Yandex Cloud
"""

import requests
import json
from datetime import datetime, timedelta

def demonstrate_tokens():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É OAuth –∏ IAM —Ç–æ–∫–µ–Ω–∞–º–∏"""
    
    print("üîç –†–ê–ó–ë–ò–†–ê–ï–ú–°–Ø –° –¢–û–ö–ï–ù–ê–ú–ò YANDEX CLOUD")
    print("="*60)
    
    # –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
    oauth_token = "y0_xDapiLvBBjB3RMgureWpRRd-4N8PQ1wUwN2LE2biUiAYyiHJA"
    folder_id = "b1g6ft1co3nrff8jds4g"
    
    print(f"\n1Ô∏è‚É£ OAUTH TOKEN (–¥–æ–ª–≥–æ–∂–∏–≤—É—â–∏–π):")
    print(f"   {oauth_token}")
    print(f"   ‚úÖ –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –ü–†–ê–í–ò–õ–¨–ù–´–ô")
    print(f"   ‚úÖ –û–Ω –ù–ï –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤") 
    print(f"   ‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –º–µ—Å—è—Ü–∞–º–∏")
    print(f"   üéØ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IAM —Ç–æ–∫–µ–Ω–æ–≤")
    
    print(f"\n2Ô∏è‚É£ IAM TOKEN (–∫–æ—Ä–æ—Ç–∫–æ–∂–∏–≤—É—â–∏–π):")
    print(f"   –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–∞–µ–º –∏–∑ OAuth —Ç–æ–∫–µ–Ω–∞")
    print(f"   ‚è±Ô∏è  –î–µ–π—Å—Ç–≤—É–µ—Ç —Ä–æ–≤–Ω–æ 12 —á–∞—Å–æ–≤")
    print(f"   üîÑ –ö–∞–∂–¥—ã–π —Ä–∞–∑ –ù–û–í–´–ô –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ")
    print(f"   üéØ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    # –ü–æ–ª—É—á–∞–µ–º IAM —Ç–æ–∫–µ–Ω
    print(f"\nüîÑ –ü–û–õ–£–ß–ê–ï–ú –ù–û–í–´–ô IAM TOKEN...")
    
    iam_url = "https://iam.api.cloud.yandex.net/iam/v1/tokens"
    iam_payload = {"yandexPassportOauthToken": oauth_token}
    
    try:
        response = requests.post(iam_url, json=iam_payload)
        response.raise_for_status()
        data = response.json()
        
        iam_token = data["iamToken"]
        expires_at = data.get("expiresAt")
        
        print(f"‚úÖ –ù–û–í–´–ô IAM TOKEN –ø–æ–ª—É—á–µ–Ω:")
        print(f"   {iam_token[:50]}...")
        print(f"   üìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {expires_at}")
        
        # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è
        if expires_at:
            expire_time = datetime.fromisoformat(expires_at.replace('Z', '+00:00'))
            time_left = expire_time - datetime.now()
            hours_left = time_left.total_seconds() / 3600
            print(f"   ‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {hours_left:.1f} —á–∞—Å–æ–≤")
        
        print(f"\nüîÑ –ü–û–õ–£–ß–ê–ï–ú –ï–©–Å –û–î–ò–ù IAM TOKEN (—á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã)...")
        import time
        time.sleep(3)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Ç–æ—Ä–æ–π IAM —Ç–æ–∫–µ–Ω
        response2 = requests.post(iam_url, json=iam_payload)
        data2 = response2.json()
        iam_token2 = data2["iamToken"]
        
        print(f"‚úÖ –í–¢–û–†–û–ô IAM TOKEN:")
        print(f"   {iam_token2[:50]}...")
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º
        if iam_token != iam_token2:
            print(f"   üéØ –í–ò–î–ò–¢–ï? –¢–æ–∫–µ–Ω—ã –†–ê–ó–ù–´–ï!")
            print(f"   üîÑ IAM —Ç–æ–∫–µ–Ω –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ")
        else:
            print(f"   ‚ö†Ô∏è  –¢–æ–∫–µ–Ω—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (—Ä–µ–¥–∫–∏–π —Å–ª—É—á–∞–π)")
            
        print(f"\nüí° –í–´–í–û–î:")
        print(f"   ‚úÖ –í–∞—à OAuth —Ç–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏ –Ω–µ –º–µ–Ω—è–ª—Å—è")
        print(f"   ‚úÖ IAM —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑")
        print(f"   ‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–π IAM –∏—Å—Ç–µ–∫")
        print(f"   ‚úÖ –ú–æ–π –∫–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç IAM —Ç–æ–∫–µ–Ω—ã")
        
        return iam_token
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None


def show_token_lifecycle():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª —Ç–æ–∫–µ–Ω–æ–≤"""
    
    print(f"\nüìä –ñ–ò–ó–ù–ï–ù–ù–´–ô –¶–ò–ö–õ –¢–û–ö–ï–ù–û–í:")
    print("="*60)
    
    print(f"""
üîë OAuth Token:
   ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–µ—Ç—Å—è: –ü—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Yandex
   ‚îú‚îÄ‚îÄ –ñ–∏–≤—ë—Ç: –ú–µ—Å—è—Ü—ã/–≥–æ–¥—ã
   ‚îú‚îÄ‚îÄ –ú–µ–Ω—è–µ—Ç—Å—è: –¢–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
   ‚îî‚îÄ‚îÄ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IAM —Ç–æ–∫–µ–Ω–æ–≤

‚ö° IAM Token:
   ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–µ—Ç—Å—è: –ü–æ –∑–∞–ø—Ä–æ—Å—É –∏–∑ OAuth —Ç–æ–∫–µ–Ω–∞  
   ‚îú‚îÄ‚îÄ –ñ–∏–≤—ë—Ç: –†–æ–≤–Ω–æ 12 —á–∞—Å–æ–≤
   ‚îú‚îÄ‚îÄ –ú–µ–Ω—è–µ—Ç—Å—è: –ü—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ
   ‚îî‚îÄ‚îÄ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: –î–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ (ASR, TTS, etc)
    
üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–º–æ–π –∫–æ–¥):
   ‚îú‚îÄ‚îÄ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç: –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
   ‚îú‚îÄ‚îÄ –û–±–Ω–æ–≤–ª—è–µ—Ç: –ó–∞ 30 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
   ‚îú‚îÄ‚îÄ –ü–æ–≤—Ç–æ—Ä—è–µ—Ç: –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö 401
   ‚îî‚îÄ‚îÄ –õ–æ–≥–∏—Ä—É–µ—Ç: –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
""")


def main():
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –° –¢–û–ö–ï–ù–ê–ú–ò YANDEX")
    print("="*60)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω—ã
    iam_token = demonstrate_tokens()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª
    show_token_lifecycle()
    
    if iam_token:
        print(f"\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   ‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏—Å—Ç–µ–∫—à–∏–º —Ç–æ–∫–µ–Ω–æ–º –†–ï–®–ï–ù–ê")
        print(f"   ‚úÖ –£ –≤–∞—Å —Ç–µ–ø–µ—Ä—å –µ—Å—Ç—å —Å–≤–µ–∂–∏–π IAM —Ç–æ–∫–µ–Ω")
        print(f"   ‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")
        print(f"   ‚úÖ –í–∞—à OAuth —Ç–æ–∫–µ–Ω –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–µ–º –∂–µ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        
        print(f"\nüìã –ß–¢–û –î–ï–õ–ê–¢–¨ –î–ê–õ–¨–®–ï:")
        print(f"   1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–π –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        print(f"   2. OAuth —Ç–æ–∫–µ–Ω –ù–ï –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å")  
        print(f"   3. IAM —Ç–æ–∫–µ–Ω—ã –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print(f"   4. –ó–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –æ—à–∏–±–∫–∏ 401 Unauthorized")

if __name__ == "__main__":
    main()
